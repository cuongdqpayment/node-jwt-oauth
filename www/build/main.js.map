{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/services/apiService.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../util (ignored)","webpack:///util (ignored)?eaa9","../../buffer (ignored)","../../crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 156;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 156\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 197;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 197\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/apiService';\r\nimport NodeRSA from 'node-rsa';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\r\n  public myFromGroup: FormGroup;\r\n  public isImageViewer: boolean = false;\r\n  public resourceImages: {imageViewer: any,file:any, name: string }[] = [];\r\n  public serverKey = new NodeRSA(null, { signingScheme: 'pkcs1-sha256' });\r\n  \r\n  constructor(public navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    private httpClient: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    /* this.apiService.testEncryptDecrypt();\r\n    this.apiService.testSignVerify(); */\r\n    this.apiService.getServerKey()\r\n    .then(pk=>{\r\n      this.serverKey.importKey(pk);\r\n      //console.log(this.serverKey);\r\n    });\r\n    \r\n\r\n    this.myFromGroup = this.formBuilder.group({\r\n      user: 'admin',\r\n      pass: 'password'\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    //ma hoa du lieu truoc khi truyen di\r\n    var passEncrypted= this.serverKey.encrypt(this.myFromGroup.get('pass').value, 'base64', 'utf8');\r\n\r\n    var formData: FormData = new FormData();\r\n    formData.append(\"username\",this.myFromGroup.get('user').value);\r\n    formData.append(\"password\",passEncrypted);\r\n    \r\n    //gui lenh login \r\n    this.apiService.postLogin(formData)\r\n    .then(data=>console.log(data));\r\n    \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map'\r\n\r\nimport NodeRSA from 'node-rsa';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  \r\n  public clientKey = new NodeRSA({ b: 512 }, { signingScheme: 'pkcs1-sha256' }); //for decrypte\r\n  public midleKey =  new NodeRSA(null, { signingScheme: 'pkcs1-sha256' }); //for test\r\n  public serverKey = new NodeRSA(null, { signingScheme: 'pkcs1-sha256' }); //for crypte\r\n  \r\n  constructor(public httpClient: HttpClient, public sanitizer: DomSanitizer) {\r\n    //key nay de test thu noi bo\r\n    this.midleKey.importKey(this.clientKey.exportKey('public'));\r\n  }\r\n\r\n  testEncryptDecrypt(){\r\n    //ma hoa va giai ma du lieu\r\n    const objClient = {\r\n      info: 'Bảng tin cần mã hóa'\r\n    };\r\n\r\n    //lay thong tin object dung public key ma hoa\r\n    const encryptedPublicKey = this.midleKey.encrypt(JSON.stringify(objClient), 'base64', 'utf8');\r\n    //console.log('encryptedPublicKey: ', encryptedPublicKey);\r\n    const decryptedPrivateKey = this.clientKey.decrypt(encryptedPublicKey, 'utf8');\r\n    console.log('decryptedPrivateKey: ', decryptedPrivateKey);\r\n\r\n    //lay thong tin object dung public key ma hoa\r\n    const encryptedPrivateKey = this.clientKey.encryptPrivate(JSON.stringify(objClient), 'base64', 'utf8');\r\n    //console.log('encryptedPrivateKey: ', encryptedPrivateKey);\r\n    const decryptedPPublicKey = this.midleKey.decryptPublic(encryptedPrivateKey, 'utf8');\r\n    console.log('decryptedPrivateKey: ', decryptedPPublicKey);\r\n\r\n  }\r\n\r\n\r\n  testSignVerify(){\r\n    //Ký và chứng thực\r\n    const objClient = {\r\n      info: 'Bảng tin cần chứng thực'\r\n    };\r\n\r\n    //Dùng private key để ký nhận\r\n    const signedPrivateKey = this.clientKey.sign(JSON.stringify(objClient), 'base64');\r\n    console.log('signedPrivateKey: '+ signedPrivateKey);\r\n\r\n    const verifyPublicKey = this.midleKey.verify(JSON.stringify(objClient), signedPrivateKey, 'utf8', 'base64');\r\n    console.log('verifyPublicKey: ' + verifyPublicKey);\r\n\r\n    const verifyPrivateKey = this.clientKey.verify(JSON.stringify(objClient), signedPrivateKey, 'utf8', 'base64');\r\n    console.log('verifyPrivateKey: ' + verifyPrivateKey);\r\n\r\n  }\r\n\r\n  getServerKey(){\r\n      return this.httpClient.get('http://localhost:9235/key-json')\r\n             .toPromise()\r\n             .then(jsonData => jsonData.PUBLIC_KEY);\r\n  }\r\n\r\n  postLogin(formData){\r\n    return this.httpClient.post('http://localhost:9235/login', formData)\r\n                .toPromise()\r\n                .then(data => {\r\n                    //console.log(data);\r\n                    return data;\r\n                });\r\n            \r\n  }\r\n\r\n  //lay user mau json\r\n  getRandomUser(nRecord: number) {\r\n    return this.httpClient.get('https://randomuser.me/api/?results=' + nRecord)\r\n      .map(res => res['results'])\r\n  }\r\n\r\n  //lay \r\n\r\n\r\n  getHtmlWeb(url: string) {\r\n    //ket qua tra ve la text hay json, neu la text thi phai xu ly chuyen doi html\r\n    //this.sanitizer.bypassSecurityTrustHtml(webhtml)\r\n    return this.httpClient.get(url,{ responseType: 'text'})\r\n       .map(webhtml => webhtml);\r\n  }\r\n\r\n  postHtmlWeb(url: string, jsonRequest: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        //'Authorization': 'my-auth-token',\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Accept': 'application/html; text/html'\r\n      })\r\n    };\r\n\r\n    return this.httpClient.post(url, jsonRequest, httpOptions)\r\n      .subscribe(webhtml => this.sanitizer.bypassSecurityTrustHtml(webhtml['_body'])\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/apiService.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { ApiService } from '../services/apiService';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    IonicModule.forRoot(MyApp)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    ApiService,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { HomePage } from '../pages/home/home';\r\n\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  rootPage:any = HomePage;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n\r\n  //tao RSA su dung lien lac voi server\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 362\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 364\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 399\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 400\n// module chunks = 0"],"sourceRoot":""}